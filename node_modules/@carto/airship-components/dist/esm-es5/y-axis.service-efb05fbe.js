import { r as readableNumber } from './readable-number-b11b551f.js';
import { s as select, l as linear } from './index-3374c455.js';
import { a as axisLeft } from './index-87eae0eb.js';
function renderYAxis(svgElement, scale) {
    var VERTICAL_SPACING = 36; // Need 16px top and bottom to view the labels
    var TICK_RIGHT_MARGIN = 18;
    var LABEL_WIDTH = 25;
    var ELEMENT = select(svgElement);
    var HEIGHT = ELEMENT.node().getBoundingClientRect().height - VERTICAL_SPACING;
    var WIDTH = ELEMENT.node().getBoundingClientRect().width;
    var TICK_SIZE = -WIDTH + LABEL_WIDTH;
    var RANGE = [HEIGHT, 0];
    var yScale = linear()
        .domain(scale)
        .range(RANGE);
    var yAxis = axisLeft(yScale)
        .tickSizeInner(TICK_SIZE + TICK_RIGHT_MARGIN)
        .ticks(6)
        .tickFormat(function (d) { return "" + readableNumber(d); });
    if (ELEMENT.select('.y-axis').empty()) {
        _createYAxisElement(ELEMENT).call(yAxis);
    }
    else {
        ELEMENT.select('.y-axis').call(yAxis);
    }
    ELEMENT.selectAll('.tick text')
        .attr('textLength', LABEL_WIDTH)
        .attr('lengthAdjust', 'spacing');
    return svgElement.querySelector('g.y-axis');
}
function _createYAxisElement(element) {
    return element.append('g').attr('class', 'y-axis');
}
var yAxisService = { renderYAxis: renderYAxis };
export { yAxisService as y };
