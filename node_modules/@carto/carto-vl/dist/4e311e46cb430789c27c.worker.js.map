{"version":3,"sources":["webpack://carto/webpack/bootstrap","webpack://carto/./node_modules/@mapbox/point-geometry/index.js","webpack://carto/./node_modules/@mapbox/vector-tile/index.js","webpack://carto/./node_modules/@mapbox/vector-tile/lib/vectortile.js","webpack://carto/./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","webpack://carto/./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","webpack://carto/./node_modules/earcut/src/earcut.js","webpack://carto/./node_modules/ieee754/index.js","webpack://carto/./node_modules/pbf/index.js","webpack://carto/./src/client/WindshaftWorker.js","webpack://carto/./src/client/mvt/feature-decoder.js","webpack://carto/./src/client/rsys.js","webpack://carto/./src/renderer/DummyDataframe.js","webpack://carto/./src/renderer/Metadata.js","webpack://carto/./src/renderer/decoder/common.js","webpack://carto/./src/renderer/decoder/index.js","webpack://carto/./src/renderer/decoder/lineDecoder.js","webpack://carto/./src/renderer/decoder/pointDecoder.js","webpack://carto/./src/renderer/decoder/polygonDecoder.js","webpack://carto/./src/renderer/schema.js","webpack://carto/./src/sources/MVTWorker.js","webpack://carto/./src/sources/MVTWorkers.worker.js","webpack://carto/./src/utils/geometry.js"],"names":["WindshaftWorker","metadata","propertyName","propertyValue","basename","column","getBase","properties","type","decodeDate","categorizeString","Error","d","Date","setTime","min","max","n","getTime","Polygon","flat","holes","clipped","clippedType","decodeLines","geometries","mvtExtent","decodedGeometries","map","l","line","point","push","x","y","clipLine","decodePolygons","currentPolygon","decoded","invertedOrientation","forEach","geom","area","signedPolygonArea","undefined","isExternalPolygon","preClippedVertices","_getPreClippedVertices","clipPolygon","vertices","a","i","length","j","CLIPMAX","CLIPMIN","clippingEdges","inside","p","intersect","b","numberOfEdges","polygon","isHole","clippedTypes","preClippedVertices2","clippedTypes2","setClippedType","vertexIndex","oldVertexIndex","edge","k","insideA","insideB","intersectionPoint","MIN_VALID_NUM_VERTICES","v","Object","keys","Number","coord","clippedLine","clippedLines","clipType","point1","point2","mask","point0","type0","type1","nextType","nextPoint","_removeDuplicatedVerticesOnLine","result","prevX","prevY","rToW","r","scale","center","wToR","tileRsys","z","Math","pow","rTiles","zoom","bounds","viewportZoomToSourceZoom","ceil","wRectangleTiles","wr","wMinx","wMiny","wMaxx","wMaxy","clamp","tMinx","floor","tMaxx","tMiny","tMaxy","tiles","getRsysFromTile","DummyDataframe","active","size","decodedGeom","numVertex","numFeatures","breakpoints","propertyTex","propertyCount","_aabb","IDENTITY","Metadata","featureCount","sample","geomType","isAggregated","idProperty","categoryToID","Map","IDToCategory","numCategories","values","property","categories","category","name","propertyKeys","init","has","get","frequency","NaN","set","prop","aggregations","fn","addLineString","lineString","geomBuffer","index","isPolygon","skipCallback","prevPoint","currentPoint","prevNormal","nextNormal","drawLine","normals","turnLeft","joinNormal","leftNormal","rightNormal","resizeBuffer","oldBuffer","newSize","newBuffer","Float32Array","decodeGeom","STATIC_INITIAL_BUFFER_SIZE","MAX_VERTICES_COORDINATES_PER_SEGMENT","decodeLine","geometry","featureIDToVertexIndex","feature","resizeBuffers","start","end","verticesArrayBuffer","ArrayBuffer","normalsArrayBuffer","additionalSize","minimumNeededSize","decodePoint","VERTEX_COORDINATES_PER_TRIANGLE","decodePolygon","triangles","addVertex","pointIndex","includes","isClipped","array","indexOf","union","propertyNames","Set","concat","aUsages","bUsages","combinedUsage","equals","JSON","stringify","simplify","MNS","sort","usage","u","parse","AGG_PREFIX","AGG_PATTERN","RegExp","CLUSTER_FEATURE_COUNT","startsWith","replace","getAggFN","s","substr","aggColumn","aggFN","RTT_WIDTH","mvtDecoderGeomTypes","geometryTypes","UNKNOWN","POINT","LINE","POLYGON","MVT_TO_CARTO_TYPES","MVTWorker","event","processEvent","then","message","transferables","dataframe","empty","_propertiesArrayBuffer","postMessage","params","data","setPrototypeOf","prototype","_requestDataframe","url","layerID","mID","fetch","response","urlToDataframeTransformer","MVT_EXTENT","arrayBuffer","byteLength","tile","layers","mvtLayer","_decodeMVTLayer","rs","_generateDataFrame","_autoDiscoverType","_decode","decodeFn","pointGeometries","_initializePropertyArrays","f","_checkType","loadGeometry","decodedPolygons","_decodeProperties","expected","actual","_getPropertyNamesFrom","_getPropertiesFor","decodeProperty","c","o1","o2","d1","sub","d2","d1t","perpendicular","d2t","dot","t","ax","ay","bx","by","getLineNormal","normalize","getJoinNormal","sin","cos","factor","abs","miterJoin","neg","hypot","pointInTriangle","v1","v2","v3","equalPoints","b1","halfPlaneSign","b2","b3","pointInCircle","diff","lengthSquared","pointInRectangle","bbox","toFixed","minx","maxx","miny","maxy","computeAABB","aabbList","aabb","POSITIVE_INFINITY","NEGATIVE_INFINITY","_updateAABBForGeometry","geometryType","_updateAABBLine","_updateAABBPolygon","numVertices"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,uBAAuB,kCAAkC,EAAE;;AAE3D;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,0BAA0B,6BAA6B,EAAE;;AAEzD;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,0BAA0B,6BAA6B,EAAE;;AAEzD;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,iCAAiC,qCAAqC,EAAE;;AAExE;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,iCAAiC,oCAAoC,EAAE;;AAEvE;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,0BAA0B,8BAA8B,EAAE;;AAE1D;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,0BAA0B,6BAA6B,EAAE;;AAEzD;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,MAAM;AACtB;AACA,0BAA0B,gCAAgC,EAAE;;AAE5D;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA,kCAAkC,wCAAwC,EAAE;;AAE5E;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,MAAM;AACtB;AACA,0BAA0B,iCAAiC,EAAE;;AAE7D;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,yBAAyB,6BAA6B,EAAE;;AAExD;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,yBAAyB,6BAA6B,EAAE;;AAExD;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,yBAAyB,8BAA8B,EAAE;;AAEzD;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvTA,4BAA4B,mBAAO,CAAC,iFAAqB;AACzD,mCAAmC,mBAAO,CAAC,+FAA4B;AACvE,iCAAiC,mBAAO,CAAC,2FAA0B;;;;;;;;;;;;;ACFtD;;AAEb,sBAAsB,mBAAO,CAAC,oFAAmB;;AAEjD;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfa;;AAEb,YAAY,mBAAO,CAAC,8EAAwB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;;AAEA;;AAEA,SAAS;;AAET;AACA;AACA,2CAA2C;AAC3C;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxOa;;AAEb,wBAAwB,mBAAO,CAAC,2FAAwB;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Da;;AAEb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0EAA0E;AAC1E;AACA;AACA;;AAEA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC,KAAK;AACL,2BAA2B,YAAY;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,iCAAiC,+BAA+B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,yCAAyC;AAC3D;;AAEA,mBAAmB,iBAAiB;AACpC,uBAAuB,oBAAoB;AAC3C,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;;ACnFa;;AAEb;;AAEA,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,4BAA4B,kBAAkB;AAC9C,4BAA4B,wBAAwB;AACpD,4BAA4B,yBAAyB;AACrD,4BAA4B,yBAAyB;AACrD,0BAA0B;;AAE1B;AACA,KAAK;;AAEL,8BAA8B;AAC9B;AACA,KAAK;;AAEL;AACA;AACA,wDAAwD;AACxD,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,+EAA+E;AAC/E,+EAA+E;AAC/E,+EAA+E;AAC/E;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,KAAK;;AAEL;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,6CAA6C,gDAAgD,IAAI;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,+CAA+C,KAAK;AACjG,6CAA6C,gDAAgD,IAAI;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,kDAAkD,EAAE;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,kDAAkD,EAAE;;AAEjG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C,qBAAqB,sBAAsB;AAC3C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe;AAC5C;;AAEA,wCAAwC,gBAAgB,gBAAgB,8BAA8B;AACtG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,6BAA6B;AACrG,wCAAwC,gBAAgB,gBAAgB,8BAA8B;AACtG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,gCAAgC;AACxG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,gCAAgC;;AAExG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,gBAAgB;AAC5C,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzmBA;AACA;AAEO,IAAMA,eAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,mCACoBC,QADpB,EAC8BC,YAD9B,EAC4CC,aAD5C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","file":"4e311e46cb430789c27c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sources/MVTWorkers.worker.js\");\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","import { MVTWorker } from '../sources/MVTWorker';\nimport schema from '../renderer/schema';\n\nexport class WindshaftWorker extends MVTWorker {\n    decodeProperty (metadata, propertyName, propertyValue) {\n        const basename = schema.column.getBase(propertyName);\n        const column = metadata.properties[basename];\n        if (!column) {\n            return;\n        }\n        switch (column.type) {\n            case 'date':\n                return decodeDate(column, propertyValue);\n            case 'category':\n                return metadata.categorizeString(basename, propertyValue);\n            case 'number':\n                return propertyValue;\n            default:\n                throw new Error(`Windshaft MVT decoding error. Feature property value of type '${typeof propertyValue}' cannot be decoded.`);\n        }\n    }\n}\n\nfunction decodeDate (column, propertyValue) {\n    const d = new Date();\n    d.setTime(1000 * propertyValue);\n    const {min, max} = column;\n    const n = (d - min) / (max.getTime() - min.getTime());\n    return n;\n}\n","import geometryUtils from '../../utils/geometry';\nexport class Polygon {\n    constructor () {\n        this.flat = [];\n        this.holes = [];\n        this.clipped = [];\n        this.clippedType = []; // Store a bitmask of the clipped half-planes\n    }\n}\n\nexport function decodeLines (geometries, mvtExtent) {\n    let decodedGeometries = [];\n    geometries.map(l => {\n        let line = [];\n        l.map(point => {\n            line.push([2 * point.x / mvtExtent - 1, 2 * (1 - point.y / mvtExtent) - 1]);\n        });\n        decodedGeometries.push(...clipLine(line));\n    });\n    return decodedGeometries;\n}\n\n/*\n    All this clockwise non-sense is needed because the MVT decoder dont decode the MVT fully.\n    It doesn't distinguish between internal polygon rings (which defines holes) or external ones, which defines more polygons (mulipolygons)\n    See:\n        https://github.com/mapbox/vector-tile-spec/tree/master/2.1\n        https://en.wikipedia.org/wiki/Shoelace_formula\n*/\nexport function decodePolygons (geometries, mvtExtent) {\n    let currentPolygon = null;\n    let decoded = [];\n    let invertedOrientation;\n    geometries.forEach(geom => {\n        let area = signedPolygonArea(geom);\n        if (area === 0) {\n            return;\n        }\n        if (invertedOrientation === undefined) {\n            // According to the MVT spec this condition cannot happen for\n            // MVT spec compliant tiles, but many buggy implementations\n            // don't comply with this rule when generating tiles\n            // Also, other implementations accept this out-of-the-spec condition\n            invertedOrientation = area > 0;\n        }\n        const isExternalPolygon = invertedOrientation ? area > 0 : area < 0;\n\n        const preClippedVertices = _getPreClippedVertices(geom, mvtExtent);\n\n        if (isExternalPolygon) {\n            if (currentPolygon) {\n                decoded.push(currentPolygon);\n            }\n\n            currentPolygon = new Polygon();\n        }\n\n        currentPolygon = clipPolygon(preClippedVertices, currentPolygon, !isExternalPolygon);\n    });\n\n    if (currentPolygon) {\n        decoded.push(currentPolygon);\n    }\n\n    return decoded;\n}\n\nexport function signedPolygonArea (vertices) {\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    let a = 0;\n    for (let i = 0; i < vertices.length; i++) {\n        let j = (i + 1) % vertices.length;\n        a += vertices[i].x * vertices[j].y;\n        a -= vertices[j].x * vertices[i].y;\n    }\n    return a / 2;\n}\n\nconst CLIPMAX = 1;\nconst CLIPMIN = -CLIPMAX;\n\nconst clippingEdges = [\n    {\n        // Right edge; x <= CLIPMAX for points inside\n        inside: p => p[0] <= CLIPMAX,\n        intersect: (a, b) => geometryUtils.intersect(a, b, [CLIPMAX, -100], [CLIPMAX, 100])\n    },\n    {\n        // Top edge; y <= CLIPMAX for points inside\n        inside: p => p[1] <= CLIPMAX,\n        intersect: (a, b) => geometryUtils.intersect(a, b, [-100, CLIPMAX], [100, CLIPMAX])\n    },\n    {\n        // Left edge; x >= CLIPMIN for points inside\n        inside: p => p[0] >= CLIPMIN,\n        intersect: (a, b) => geometryUtils.intersect(a, b, [CLIPMIN, -100], [CLIPMIN, 100])\n    },\n    {\n        // Bottom edge; y >= CLIPMIN for points inside\n        inside: p => p[1] >= CLIPMIN,\n        intersect: (a, b) => geometryUtils.intersect(a, b, [-100, CLIPMIN], [100, CLIPMIN])\n    }\n];\nconst numberOfEdges = clippingEdges.length;\n\nexport function clipPolygon (preClippedVertices, polygon, isHole) {\n    // Sutherland-Hodgman Algorithm to clip polygons to the tile\n    // https://www.cs.drexel.edu/~david/Classes/CS430/Lectures/L-05_Polygons.6.pdf\n\n    let clippedTypes = {};\n\n    // for each clipping edge\n    for (let i = 0; i < numberOfEdges; i++) {\n        const preClippedVertices2 = [];\n        const clippedTypes2 = {};\n\n        const setClippedType = (vertexIndex, oldVertexIndex, edge = -1) => {\n            let clippedType = 0;\n            if (oldVertexIndex >= 0) {\n                clippedType = clippedTypes[oldVertexIndex] || 0;\n            }\n            if (edge >= 0) {\n                clippedType = clippedType | (1 << edge);\n            }\n            if (clippedType) {\n                clippedTypes2[vertexIndex] = clippedType;\n            }\n        };\n\n        // for each edge on polygon\n        for (let k = 0; k < preClippedVertices.length - 1; k++) {\n            // clip polygon edge\n            const a = preClippedVertices[k];\n            const b = preClippedVertices[k + 1];\n\n            const insideA = clippingEdges[i].inside(a);\n            const insideB = clippingEdges[i].inside(b);\n\n            if (insideA && insideB) {\n                // case 1: both inside, push B vertex\n                setClippedType(preClippedVertices2.length, k + 1);\n                preClippedVertices2.push(b);\n            } else if (insideA) {\n                // case 2: just B outside, push intersection\n                const intersectionPoint = clippingEdges[i].intersect(a, b);\n                setClippedType(preClippedVertices2.length, k + 1, i);\n                preClippedVertices2.push(intersectionPoint);\n            } else if (insideB) {\n                // case 4: just A outside: push intersection, push B\n                const intersectionPoint = clippingEdges[i].intersect(a, b);\n                setClippedType(preClippedVertices2.length, k, i);\n                preClippedVertices2.push(intersectionPoint);\n                setClippedType(preClippedVertices2.length, k + 1);\n                preClippedVertices2.push(b);\n            } else {\n                // case 3: both outside: do nothing\n            }\n        }\n        if (preClippedVertices2.length) {\n            if (clippedTypes2[0]) {\n                clippedTypes2[preClippedVertices2.length] = clippedTypes2[0];\n            }\n            preClippedVertices2.push(preClippedVertices2[0]);\n        }\n        preClippedVertices = preClippedVertices2;\n        clippedTypes = clippedTypes2;\n    }\n\n    // rings with less than 3 vertices are degenerate\n    const MIN_VALID_NUM_VERTICES = 3;\n\n    // preClippedVertices is closed by repeating the first vertex\n    if (preClippedVertices.length >= MIN_VALID_NUM_VERTICES + 1) {\n        if (isHole) {\n            polygon.holes.push(polygon.flat.length / 2);\n        }\n        preClippedVertices.forEach(v => {\n            polygon.flat.push(v[0], v[1]);\n        });\n        Object.keys(clippedTypes).forEach(i => {\n            polygon.clipped.push(Number(i) * 2);\n            polygon.clippedType.push(clippedTypes[i]);\n        });\n    }\n\n    return polygon;\n}\n\nfunction _getPreClippedVertices (geom, mvtExtent) {\n    return geom.map((coord) => {\n        let x = coord.x;\n        let y = coord.y;\n\n        x = 2 * x / mvtExtent - 1;\n        y = 2 * (1 - y / mvtExtent) - 1;\n\n        return [x, y];\n    });\n}\n\nfunction clipLine (line) {\n    // linestring clipping based on the Cohen-Sutherland algorithm\n    // input is a single linestring [point0, point1, ...]\n    // output is an array of flat linestrings:\n    // [[p0x, p0y, p1x, p1y, ...], ...]\n    let clippedLine = [];\n    const clippedLines = [];\n    function clipType (point) {\n        let type = 0;\n        for (let i = 0; i < numberOfEdges; i++) {\n            type = type | (clippingEdges[i].inside(point) ? 0 : (1 << i));\n        }\n        return type;\n    }\n    function intersect (point1, point2, type) {\n        for (let i = 0; i < numberOfEdges; i++) {\n            const mask = 1 << i;\n            if (type & mask) {\n                const p = clippingEdges[i].intersect(point1, point2);\n                type = clipType(p) & ~mask;\n                return [p, type];\n            }\n        }\n    }\n    let point0 = line[0];\n    let type0 = clipType(point0);\n    for (let i = 1; i < line.length; ++i) {\n        let point1 = line[i];\n        let type1 = clipType(point1);\n        const nextType = type1;\n        const nextPoint = point1;\n\n        for (; ;) {\n            if (!(type0 | type1)) {\n                // both points inside\n                clippedLine.push(...point0);\n                if (type1 !== nextType) {\n                    clippedLine.push(...point1);\n                    if (i < line.length - 1) {\n                        // break line\n                        clippedLines.push(clippedLine);\n                        clippedLine = [];\n                    }\n                } else if (i === line.length - 1) {\n                    clippedLine.push(...point1);\n                }\n                break;\n            } else if (type0 & type1) {\n                // both points outside\n                break;\n            } else if (type0) {\n                // only point1 inside\n                [point0, type0] = intersect(point0, point1, type0);\n            } else {\n                // only point0 inside\n                [point1, type1] = intersect(point0, point1, type1);\n            }\n        }\n\n        point0 = nextPoint;\n        type0 = nextType;\n    }\n\n    clippedLine = _removeDuplicatedVerticesOnLine(clippedLine);\n    if (clippedLine.length > 0) {\n        clippedLines.push(clippedLine);\n    }\n\n    return clippedLines;\n}\n\nfunction _removeDuplicatedVerticesOnLine (line) {\n    const result = [];\n    let prevX;\n    let prevY;\n    for (let i = 0; i < line.length; i += 2) {\n        const x = line[i];\n        const y = line[i + 1];\n        if (x !== prevX || y !== prevY) {\n            result.push(x, y);\n            prevX = x;\n            prevY = y;\n        }\n    }\n    return result;\n}\n","/**\n * An RSys defines a local coordinate system that maps the coordinates\n * in the range -1 <= x <= +1; -1 <= y <= +1 to an arbitrary rectangle\n * in an external coordinate system. (e.g. Dataframe coordinates to World coordinates)\n * It is the combination of a translation and anisotropic scaling.\n * @typedef {object} RSys - Renderer relative coordinate system\n * @property {RPoint} center - Position of the local system in external coordinates\n * @property {number} scale - Y-scale (local Y-distance / external Y-distance)\n*/\n\n/*\n * Random notes\n *\n * We can redefine Dataframe to use a Rsys instead of center, scale\n * and we can use an Rsys for the Renderer's canvas.\n *\n * Some interesting World coordinate systems:\n *\n * WM (Webmercator): represents a part of the world (excluding polar regions)\n * with coordinates in the range +/-WM_R for both X and Y. (positive orientation: E,N)\n *\n * NWMC (Normalized Webmercator Coordinates): represents the Webmercator *square*\n * with coordinates in the range +/-1. Results from dividing Webmercator coordinates\n * by WM_R. (positive orientation: E,N)\n *\n * TC (Tile coordinates): integers in [0, 2^Z) for zoom level Z. Example: the tile 0/0/0 (zoom, x, y) is the root tile.\n * (positive orientation: E,S)\n *\n * An RSys's rectangle (its bounds) is the area covered by the local coordinates in\n * the range +/-1.\n *\n * When an RSys external coordinate system is WM or NWMC, we can compute:\n * * Minimum zoom level for which tiles are no larger than the RSys rectangle:\n *   Math.ceil(Math.log2(1 / r.scale));\n * * Maximum zoom level for which tiles are no smaller than the rectangle:\n *   Math.floor(Math.log2(1 / r.scale));\n * (note that 1 / r.scale is the fraction of the World height that the local rectangle's height represents)\n *\n * We'll use the term World coordinates below for the *external* reference system\n * of an RSys (usually NWMC).\n */\n\n/* eslint no-unused-vars: [\"off\"] */\n\n/**\n * R coordinates to World\n * @param {RSys} r - ref. of the passed coordinates\n * @param {number} x - x coordinate in r\n * @param {number} y - y coordinate in r\n * @return {RPoint} World coordinates\n */\nfunction rToW (r, x, y) {\n    return { x: x * r.scale + r.center.x, y: y * r.scale + r.center.y };\n}\n\n/**\n * World coordinates to local RSys\n * @param {number} x - x W-coordinate\n * @param {number} y - y W-coordinate\n * @param {RSys} r - target ref. system\n * @return {RPoint} R coordinates\n */\nexport function wToR (x, y, r) {\n    return { x: (x - r.center.x) / r.scale, y: (y - r.center.y) / r.scale };\n}\n\n/**\n * RSys of a tile (mapping local tile coordinates in +/-1 to NWMC)\n * @param {number} x - TC x coordinate\n * @param {number} y - TC y coordinate\n * @param {number} z - Tile zoom level\n * @return {RSys}\n */\nfunction tileRsys (x, y, z) {\n    let max = Math.pow(2, z);\n    return { scale: 1 / max, center: { x: 2 * (x + 0.5) / max - 1, y: 1 - 2 * (y + 0.5) / max } };\n}\n\n/**\n * TC tiles that intersect the local rectangle of an RSys\n * (with the largest tile size no larger than the rectangle)\n * @param {RSys} rsys\n * @return {Array} - array of TC tiles {x, y, z}\n */\nexport function rTiles (zoom, bounds, viewportZoomToSourceZoom = Math.ceil) {\n    return wRectangleTiles(viewportZoomToSourceZoom(zoom), bounds);\n}\n\n/**\n * TC tiles of a given zoom level that intersect a W rectangle\n * @param {number} z\n * @param {Array} - rectangle extents [minx, miny, maxx, maxy]\n * @return {Array} - array of TC tiles {x, y, z}\n */\nfunction wRectangleTiles (z, wr) {\n    const [wMinx, wMiny, wMaxx, wMaxy] = wr;\n    const n = (1 << z); // for 0 <= z <= 30 equals Math.pow(2, z)\n\n    const clamp = x => Math.min(Math.max(x, 0), n - 1);\n    // compute tile coordinate ranges\n    const tMinx = clamp(Math.floor(n * (wMinx + 1) * 0.5));\n    const tMaxx = clamp(Math.ceil(n * (wMaxx + 1) * 0.5) - 1);\n    const tMiny = clamp(Math.floor(n * (1 - wMaxy) * 0.5));\n    const tMaxy = clamp(Math.ceil(n * (1 - wMiny) * 0.5) - 1);\n    let tiles = [];\n    for (let x = tMinx; x <= tMaxx; ++x) {\n        for (let y = tMiny; y <= tMaxy; ++y) {\n            tiles.push({ x: x, y: y, z: z });\n        }\n    }\n    return tiles;\n}\n\n/**\n * Get the Rsys of a tile where the Rsys's center is the tile center and the Rsys's scale is the tile extent.\n * @param {*} x\n * @param {*} y\n * @param {*} z\n * @returns {RSys}\n */\nexport function getRsysFromTile (x, y, z) {\n    return {\n        center: {\n            x: ((x + 0.5) / Math.pow(2, z)) * 2.0 - 1,\n            y: (1.0 - (y + 0.5) / Math.pow(2, z)) * 2.0 - 1.0\n        },\n        scale: 1 / Math.pow(2, z)\n    };\n}\n\nexport default { rTiles, getRsysFromTile, wToR };\n","import { decodeGeom } from './decoder';\nimport { computeAABB } from '../utils/geometry';\n\nexport default class DummyDataframe {\n    constructor ({ center, scale, geom, properties, type, active, size, metadata }) {\n        this.active = active;\n        this.center = center;\n        this.properties = properties;\n        this.scale = scale;\n        this.type = type;\n        this.decodedGeom = decodeGeom(type, geom);\n        this.numVertex = type === 'point'\n            ? size * 3\n            : this.decodedGeom.vertices.length / 2;\n        this.numFeatures = type === 'point' ? size : this.decodedGeom.breakpoints.length || this.numVertex;\n        this.propertyTex = [];\n        this.metadata = metadata;\n        this.propertyCount = 0;\n        this._aabb = computeAABB(geom, type);\n    }\n}\n","\n// The IDENTITY metadata contains zero properties\nexport const IDENTITY = {\n    properties: {}\n};\n\nexport default class Metadata {\n    constructor ({ properties, featureCount, sample, geomType, isAggregated, idProperty } = { properties: {} }) {\n        this.properties = properties;\n        this.featureCount = featureCount;\n        this.sample = sample;\n        this.geomType = geomType;\n        this.isAggregated = isAggregated;\n        this.idProperty = idProperty || 'cartodb_id';\n\n        this.categoryToID = new Map();\n        this.IDToCategory = new Map();\n        this.numCategories = 0;\n\n        Object.values(properties).map(property => {\n            property.categories = property.categories || [];\n            property.categories.map(category => this.categorizeString(property, category.name, true));\n        });\n\n        this.propertyKeys = Object.keys(this.properties);\n    }\n    categorizeString (propertyName, category, init = false) {\n        if (category === undefined) {\n            category = null;\n        }\n        if (this.categoryToID.has(category)) {\n            return this.categoryToID.get(category);\n        }\n        if (!init) {\n            this.properties[propertyName].categories.push({\n                name: category,\n                frequency: Number.NaN\n            });\n        }\n        this.categoryToID.set(category, this.numCategories);\n        this.IDToCategory.set(this.numCategories, category);\n        this.numCategories++;\n        return this.numCategories - 1;\n    }\n    propertyNames (propertyName) {\n        const prop = this.properties[propertyName];\n        if (prop.aggregations) {\n            return Object.keys(prop.aggregations).map(fn => prop.aggregations[fn]);\n        }\n        return [propertyName];\n    }\n}\n","import { getJoinNormal, getLineNormal, neg } from '../../utils/geometry';\n\n/**\n * Create a triangulated lineString: zero-sized, vertex-shader expanded triangle list\n * with `miter` joins. For angle < 60 joins are automatically adjusted to `bevel`.\n * https://github.com/CartoDB/carto-vl/wiki/Line-rendering\n */\nexport function addLineString (lineString, geomBuffer, index, isPolygon, skipCallback) {\n    let prevPoint, currentPoint, nextPoint;\n    let prevNormal, nextNormal;\n    let drawLine;\n\n    // We need at least two points\n    if (lineString.length >= 4) {\n        // Initialize the first two points\n        prevPoint = [lineString[0], lineString[1]];\n        currentPoint = [lineString[2], lineString[3]];\n        prevNormal = getLineNormal(prevPoint, currentPoint);\n\n        for (let i = 4; i <= lineString.length; i += 2) {\n            drawLine = !(skipCallback && skipCallback(i));\n\n            if (drawLine) {\n                // First triangle\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n\n                // Second triangle\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n            }\n\n            // If there is a next point, compute its properties\n            if (i <= lineString.length - 2) {\n                nextPoint = [lineString[i], lineString[i + 1]];\n            } else if (isPolygon) {\n                nextPoint = [lineString[2], lineString[3]];\n            }\n\n            if (nextPoint) {\n                nextNormal = getLineNormal(currentPoint, nextPoint);\n\n                if (drawLine) {\n                    // `turnLeft` indicates that the nextLine turns to the left\n                    // `joinNormal` contains the direction and size for the `miter` vertex\n                    //  If this is not defined means that the join must be `bevel`.\n                    let {turnLeft, joinNormal} = getJoinNormal(prevNormal, nextNormal);\n\n                    let leftNormal = turnLeft ? prevNormal : neg(nextNormal);\n                    let rightNormal = turnLeft ? nextNormal : neg(prevNormal);\n\n                    // Third triangle\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = 0;\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    // Mark vertex to be stroke in PolygonShader with the\n                    // non-zero value 1e-37, so it validates the expression\n                    // `normal != vec2(0.)` without affecting the vertex position.\n                    geomBuffer.normals[index++] = isPolygon ? 1e-37 : 0;\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = leftNormal[0];\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    geomBuffer.normals[index++] = leftNormal[1];\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = rightNormal[0];\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    geomBuffer.normals[index++] = rightNormal[1];\n\n                    if (joinNormal) {\n                        // Forth triangle\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = joinNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = joinNormal[1];\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = rightNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = rightNormal[1];\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = leftNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = leftNormal[1];\n                    }\n                }\n            }\n\n            // Update the variables for the next iteration\n            prevPoint = currentPoint;\n            currentPoint = nextPoint;\n            prevNormal = nextNormal;\n            nextPoint = null;\n        }\n    }\n    return index;\n}\n\n/**\n * Resize a Float32Array buffer in an efficient way\n */\nexport function resizeBuffer (oldBuffer, newSize) {\n    const newBuffer = new Float32Array(newSize);\n    newBuffer.set(oldBuffer);\n    return newBuffer;\n}\n","import { decodePoint } from './pointDecoder';\nimport { decodeLine } from './lineDecoder';\nimport { decodePolygon } from './polygonDecoder';\n\nexport function decodeGeom (geomType, geom) {\n    switch (geomType) {\n        case 'point':\n            return decodePoint(geom);\n        case 'line':\n            return decodeLine(geom);\n        case 'polygon':\n            return decodePolygon(geom);\n        default:\n            throw new Error(`Unimplemented geometry type: '${geomType}'`);\n    }\n}\n","import { addLineString, resizeBuffer } from './common';\n\n// If the geometry type is 'line' it will generate the appropriate zero-sized, vertex-shader expanded triangle list with `miter` and `bevel` joins.\n// The geom will be an array of coordinates in this case\n\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024; // 4 MB\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\n\nlet index = 0;\nlet geomBuffer = {\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\n};\n\nexport function decodeLine (geometry) {\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\n    let featureIDToVertexIndex = new Map();\n\n    index = 0;\n    for (let i = 0; i < geometry.length; i++) {\n        const feature = geometry[i];\n        for (let j = 0; j < feature.length; j++) {\n            // Increase buffers size if required\n            resizeBuffers(MAX_VERTICES_COORDINATES_PER_SEGMENT * feature[j].length);\n\n            // Add line string\n            index = addLineString(feature[j], geomBuffer, index);\n        }\n\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\n            ? { start: 0, end: index }\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\n\n        breakpoints.push(index);\n    }\n\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\n    const vertices = new Float32Array(verticesArrayBuffer);\n    const normals = new Float32Array(normalsArrayBuffer);\n    for (let i = 0; i < index; i++) {\n        vertices[i] = geomBuffer.vertices[i];\n        normals[i] = geomBuffer.normals[i];\n    }\n    return {\n        vertices,\n        normals,\n        verticesArrayBuffer,\n        normalsArrayBuffer,\n        featureIDToVertexIndex,\n        breakpoints\n    };\n}\n\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers.\nfunction resizeBuffers (additionalSize) {\n    const minimumNeededSize = index + additionalSize;\n    if (minimumNeededSize > geomBuffer.vertices.length) {\n        const newSize = 2 * minimumNeededSize;\n        geomBuffer.vertices = resizeBuffer(geomBuffer.vertices, newSize);\n        geomBuffer.normals = resizeBuffer(geomBuffer.normals, newSize);\n    }\n}\n","// If the geometry type is 'point' it will pass trough the geom (the vertex array)\n\nexport function decodePoint (verticesArrayBuffer) {\n    return {\n        verticesArrayBuffer: verticesArrayBuffer,\n        vertices: new Float32Array(verticesArrayBuffer),\n        breakpoints: []\n    };\n}\n","import * as earcut from 'earcut';\nimport { addLineString, resizeBuffer } from './common';\n\n// If the geometry type is 'polygon' it will triangulate the polygon list (geom)\n// geom will be a list of polygons in which each polygon will have a flat array of vertices and a list of holes indices\n// Example:\n/*   let geom = [{\n       flat: [\n         0.,0., 1.,0., 1.,1., 0.,1., 0.,0, //A square\n         0.25,0.25, 0.75,0.25, 0.75,0.75, 0.25,0.75, 0.25,0.25//A small square\n       ]\n       holes: [5]\n     }]\n*/\n\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024 * 2; // 8 MB\nconst VERTEX_COORDINATES_PER_TRIANGLE = 2;\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\n\nlet index = 0;\nlet geomBuffer = {\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\n};\n\nexport function decodePolygon (geometry) {\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\n    let featureIDToVertexIndex = new Map();\n\n    index = 0;\n    for (let i = 0; i < geometry.length; i++) {\n        const feature = geometry[i];\n        for (let j = 0; j < feature.length; j++) {\n            const polygon = feature[j];\n            const triangles = earcut(polygon.flat, polygon.holes);\n\n            // Increase buffers size if required\n            resizeBuffers(VERTEX_COORDINATES_PER_TRIANGLE * triangles.length +\n                          MAX_VERTICES_COORDINATES_PER_SEGMENT * polygon.flat.length);\n\n            // Add polygon\n            for (let k = 0; k < triangles.length; k++) {\n                addVertex(polygon.flat, 2 * triangles[k]);\n            }\n\n            // Add polygon stroke\n            index = addLineString(polygon.flat, geomBuffer, index, true, (pointIndex) => {\n                // Skip adding the line which connects two rings OR is clipped\n                return polygon.holes.includes((pointIndex - 2) / 2) || isClipped(polygon, pointIndex - 4, pointIndex - 2);\n            });\n        }\n\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\n            ? { start: 0, end: index }\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\n\n        breakpoints.push(index);\n    }\n\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\n    const vertices = new Float32Array(verticesArrayBuffer);\n    const normals = new Float32Array(normalsArrayBuffer);\n    for (let i = 0; i < index; i++) {\n        vertices[i] = geomBuffer.vertices[i];\n        normals[i] = geomBuffer.normals[i];\n    }\n    return {\n        vertices,\n        normals,\n        verticesArrayBuffer,\n        normalsArrayBuffer,\n        featureIDToVertexIndex,\n        breakpoints\n    };\n}\n\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers\nfunction resizeBuffers (additionalSize) {\n    const minimumNeededSize = index + additionalSize;\n    if (minimumNeededSize > geomBuffer.vertices.length) {\n        const newSize = 2 * minimumNeededSize;\n        geomBuffer.vertices = resizeBuffer(geomBuffer.vertices, newSize);\n        geomBuffer.normals = resizeBuffer(geomBuffer.normals, newSize);\n    }\n}\n\n// Add vertex in triangles.\nfunction addVertex (array, vertexIndex) {\n    geomBuffer.vertices[index] = array[vertexIndex];\n    geomBuffer.normals[index++] = 0;\n    geomBuffer.vertices[index] = array[vertexIndex + 1];\n    geomBuffer.normals[index++] = 0;\n}\n\nfunction isClipped (polygon, i, j) {\n    if (polygon.clipped.includes(i) && polygon.clipped.includes(j)) {\n        if (polygon.clippedType[polygon.clipped.indexOf(i)] &\n            polygon.clippedType[polygon.clipped.indexOf(j)]) {\n            return true;\n        }\n    }\n    return false;\n}\n","\nexport const IDENTITY = {};\n\n/*\nconst mns = {\n    price:  [{type: 'unaggregated'}],\n    amount: [{type: 'aggregated', op: 'avg'}, {type: 'aggregated', op: 'max'}}]\n};\n\n*/\n\nexport function union (a, b) {\n    const result = {};\n    const propertyNames = new Set(Object.keys(a).concat(Object.keys(b)));\n    propertyNames.forEach(propertyName => {\n        const aUsages = a[propertyName] || [];\n        const bUsages = b[propertyName] || [];\n        const combinedUsage = [...aUsages, ...bUsages];\n        result[propertyName] = combinedUsage;\n    });\n    return result;\n}\n\nexport function equals (a, b) {\n    if (!a || !b) {\n        return false;\n    }\n    return JSON.stringify(simplify(a)) === JSON.stringify(simplify(b));\n}\n\nfunction simplify (MNS) {\n    const result = {};\n    const propertyNames = Object.keys(MNS).sort();\n    propertyNames.forEach(propertyName => {\n        // Stringify and Set to remove duplicates\n        let usage = [...new Set(MNS[propertyName].map(u => JSON.stringify(u)))];\n        usage.sort();\n        usage = usage.map(u => JSON.parse(u));\n        result[propertyName] = usage;\n    });\n    return result;\n}\n\nconst AGG_PREFIX = '_cdb_agg_';\nconst AGG_PATTERN = new RegExp('^' + AGG_PREFIX + '[a-zA-Z0-9]+_');\n\nexport const CLUSTER_FEATURE_COUNT = '_cdb_feature_count';\n\n// column information functions\nexport const column = {\n    isAggregated: function isAggregated (name) {\n        return name.startsWith(AGG_PREFIX);\n    },\n    getBase: function getBase (name) {\n        return name.replace(AGG_PATTERN, '');\n    },\n    getAggFN: function getAggFN (name) {\n        let s = name.substr(AGG_PREFIX.length);\n        return s.substr(0, s.indexOf('_'));\n    },\n    aggColumn (name, aggFN) {\n        return `${AGG_PREFIX}${aggFN}_${name}`;\n    }\n};\n\nexport default { column, equals, union, IDENTITY, simplify };\n","import { VectorTile } from '@mapbox/vector-tile';\nimport * as Protobuf from 'pbf';\nimport * as rsys from '../client/rsys';\nimport { decodeLines, decodePolygons } from '../client/mvt/feature-decoder';\nimport Metadata from '../renderer/Metadata';\nimport DummyDataframe from '../renderer/DummyDataframe';\n\n// TODO import correctly\nconst RTT_WIDTH = 1024;\n\n// Constants for '@mapbox/vector-tile' geometry types, from https://github.com/mapbox/vector-tile-js/blob/v1.3.0/lib/vectortilefeature.js#L39\nconst mvtDecoderGeomTypes = { point: 1, line: 2, polygon: 3 };\n\nconst geometryTypes = {\n    UNKNOWN: 'unknown',\n    POINT: 'point',\n    LINE: 'line',\n    POLYGON: 'polygon'\n};\n\nconst MVT_TO_CARTO_TYPES = {\n    1: geometryTypes.POINT,\n    2: geometryTypes.LINE,\n    3: geometryTypes.POLYGON\n};\n\nexport class MVTWorker {\n    // Worker API\n    onmessage (event) {\n        this.processEvent(event).then(message => {\n            const transferables = [];\n            if (!message.dataframe.empty) {\n                transferables.push(this._propertiesArrayBuffer);\n                transferables.push(message.dataframe.decodedGeom.verticesArrayBuffer);\n                if (message.dataframe.decodedGeom.normalsArrayBuffer) {\n                    transferables.push(message.dataframe.decodedGeom.normalsArrayBuffer);\n                }\n            }\n            postMessage(message, transferables);\n        });\n    }\n    async processEvent (event) {\n        const params = event.data;\n        if (params.metadata) {\n            Object.setPrototypeOf(params.metadata, Metadata.prototype);\n            this.metadata = params.metadata;\n        }\n        const dataframe = await this._requestDataframe(params.x, params.y, params.z, params.url, params.layerID, this.metadata);\n        return {\n            mID: params.mID,\n            dataframe\n        };\n    }\n\n    async _requestDataframe (x, y, z, url, layerID, metadata) {\n        const response = await fetch(url);\n        const dataframe = await this.urlToDataframeTransformer(response, x, y, z, layerID, metadata);\n        return dataframe;\n    }\n\n    async urlToDataframeTransformer (response, x, y, z, layerID, metadata) {\n        const MVT_EXTENT = 4096;\n        const arrayBuffer = await response.arrayBuffer();\n        if (arrayBuffer.byteLength === 0 || response === 'null') {\n            return { empty: true };\n        }\n        const tile = new VectorTile(new Protobuf(arrayBuffer));\n\n        if (Object.keys(tile.layers).length > 1 && !layerID) {\n            throw new Error(`LayerID parameter wasn't specified and the MVT tile contains multiple layers: ${JSON.stringify(Object.keys(tile.layers))}`);\n        }\n\n        const mvtLayer = tile.layers[layerID || Object.keys(tile.layers)[0]]; // FIXME this!!!\n\n        if (!mvtLayer) {\n            return { empty: true };\n        }\n\n        const { geometries, properties, numFeatures } = this._decodeMVTLayer(mvtLayer, metadata, MVT_EXTENT);\n        const rs = rsys.getRsysFromTile(x, y, z);\n        const dataframe = this._generateDataFrame(rs, geometries, properties, numFeatures, metadata.geomType, metadata);\n\n        return dataframe;\n    }\n\n    _decodeMVTLayer (mvtLayer, metadata, mvtExtent) {\n        if (!mvtLayer.length) {\n            return { properties: [], geometries: {}, numFeatures: 0 };\n        }\n        if (!metadata.geomType) {\n            metadata.geomType = this._autoDiscoverType(mvtLayer);\n        }\n        switch (metadata.geomType) {\n            case geometryTypes.POINT:\n                const arrayBuffer = new ArrayBuffer(mvtLayer.length * 2 * 3 * 4);// SIZEOF\n                return this._decode(mvtLayer, metadata, mvtExtent, arrayBuffer);\n            case geometryTypes.LINE:\n                return this._decode(mvtLayer, metadata, mvtExtent, [], decodeLines);\n            case geometryTypes.POLYGON:\n                return this._decode(mvtLayer, metadata, mvtExtent, [], decodePolygons);\n            default:\n                throw new Error('MVT: invalid geometry type');\n        }\n    }\n\n    _autoDiscoverType (mvtLayer) {\n        const type = mvtLayer.feature(0).type;\n        switch (type) {\n            case mvtDecoderGeomTypes.point:\n                return geometryTypes.POINT;\n            case mvtDecoderGeomTypes.line:\n                return geometryTypes.LINE;\n            case mvtDecoderGeomTypes.polygon:\n                return geometryTypes.POLYGON;\n            default:\n                throw new Error('MVT: invalid geometry type');\n        }\n    }\n\n    _decode (mvtLayer, metadata, mvtExtent, geometries, decodeFn) {\n        let numFeatures = 0;\n        let pointGeometries;\n        if (geometries) {\n            pointGeometries = new Float32Array(geometries);\n        }\n        const { properties, propertyNames } = this._initializePropertyArrays(metadata, mvtLayer.length);\n        for (let i = 0; i < mvtLayer.length; i++) {\n            const f = mvtLayer.feature(i);\n            this._checkType(f, metadata.geomType);\n            const geom = f.loadGeometry();\n            if (decodeFn) {\n                const decodedPolygons = decodeFn(geom, mvtExtent);\n                geometries.push(decodedPolygons);\n            } else {\n                // TODO refactor\n                const x = 2 * (geom[0][0].x) / mvtExtent - 1.0;\n                const y = 2 * (1.0 - (geom[0][0].y) / mvtExtent) - 1.0;\n                // Tiles may contain points in the border;\n                // we'll avoid here duplicated points between tiles by excluding the 1-edge\n                if (x < -1 || x >= 1 || y < -1 || y >= 1) {\n                    continue;\n                }\n                pointGeometries[6 * numFeatures + 0] = x;\n                pointGeometries[6 * numFeatures + 1] = y;\n                pointGeometries[6 * numFeatures + 2] = x;\n                pointGeometries[6 * numFeatures + 3] = y;\n                pointGeometries[6 * numFeatures + 4] = x;\n                pointGeometries[6 * numFeatures + 5] = y;\n            }\n            if (f.properties[metadata.idProperty] === undefined) {\n                throw new Error(`MVT feature with undefined idProperty '${metadata.idProperty}'`);\n            }\n            this._decodeProperties(metadata, propertyNames, properties, f, numFeatures);\n            numFeatures++;\n        }\n\n        return { properties, geometries, numFeatures };\n    }\n\n    // Currently only mvtLayers with the same type in every feature are supported\n    _checkType (feature, expected) {\n        const type = feature.type;\n        const actual = MVT_TO_CARTO_TYPES[type];\n        if (actual !== expected) {\n            throw new Error(`MVT: mixed geometry types in the same layer. Layer has type: ${expected} but feature was ${actual}`);\n        }\n    }\n\n    _initializePropertyArrays (metadata, length) {\n        const propertyNames = this._getPropertyNamesFrom(metadata);\n        const properties = this._getPropertiesFor(propertyNames, length);\n        return { propertyNames, properties };\n    }\n\n    _getPropertyNamesFrom (metadata) {\n        const propertyNames = [];\n        for (let i = 0; i < metadata.propertyKeys.length; i++) {\n            const propertyName = metadata.propertyKeys[i];\n            if (metadata.properties[propertyName].type === 'geometry') {\n                continue;\n            }\n            propertyNames.push(...metadata.propertyNames(propertyName));\n        }\n        return propertyNames;\n    }\n\n    _getPropertiesFor (propertyNames, length) {\n        const properties = {};\n        const size = Math.ceil(length / RTT_WIDTH) * RTT_WIDTH;\n\n        const arrayBuffer = new ArrayBuffer(4 * size * propertyNames.length);\n        this._propertiesArrayBuffer = arrayBuffer;\n        for (let i = 0; i < propertyNames.length; i++) {\n            const propertyName = propertyNames[i];\n            properties[propertyName] = new Float32Array(arrayBuffer, i * 4 * size, size);\n        }\n\n        return properties;\n    }\n\n    _decodeProperties (metadata, propertyNames, properties, feature, i) {\n        const length = propertyNames.length;\n        for (let j = 0; j < length; j++) {\n            const propertyName = propertyNames[j];\n            const propertyValue = feature.properties[propertyName];\n            properties[propertyName][i] = this.decodeProperty(metadata, propertyName, propertyValue);\n        }\n    }\n\n    decodeProperty (metadata, propertyName, propertyValue) {\n        if (typeof propertyValue === 'string') {\n            if (metadata.properties[propertyName].type !== 'category') {\n                throw new Error(`MVT decoding error. Metadata property '${propertyName}' is of type '${metadata.properties[propertyName].type}' but the MVT tile contained a feature property of type string: '${propertyValue}'`);\n            }\n            return metadata.categorizeString(propertyName, propertyValue);\n        } else if (typeof propertyValue === 'number') {\n            if (metadata.properties[propertyName].type !== 'number') {\n                throw new Error(`MVT decoding error. Metadata property '${propertyName}' is of type '${metadata.properties[propertyName].type}' but the MVT tile contained a feature property of type number: '${propertyValue}'`);\n            }\n            return propertyValue;\n        } else if (propertyValue === null || propertyValue === undefined) {\n            return Number.NaN;\n        } else {\n            throw new Error(`MVT decoding error. Feature property value of type '${typeof propertyValue}' cannot be decoded.`);\n        }\n    }\n\n    _generateDataFrame (rs, geometry, properties, size, type, metadata) {\n        return new DummyDataframe({\n            active: false,\n            center: rs.center,\n            geom: geometry,\n            properties: properties,\n            scale: rs.scale,\n            size: size,\n            type: type,\n            metadata\n        });\n    }\n}\n","import { MVTWorker } from './MVTWorker';\nimport { WindshaftWorker } from '../client/WindshaftWorker';\n\n// This file publishes a Web Worker onmessage function that will redirect incoming messages\n// based on an ID (`workerName`) defined by the message sender\n// to each different Worker implementation\n\nconst workers = {\n    MVT: new MVTWorker(),\n    windshaft: new WindshaftWorker()\n};\n\nonmessage = function (event) {\n    return workers[event.data.workerName].onmessage(event);\n};\n","// If AB intersects CD => return intersection point\n// Intersection method from Real Time Rendering, Third Edition, page 780\nexport function intersect (a, b, c, d) {\n    const o1 = a;\n    const o2 = c;\n    const d1 = sub(b, a);\n    const d2 = sub(d, c);\n    const d1t = perpendicular(d1);\n    const d2t = perpendicular(d2);\n\n    const s = dot(sub(o2, o1), d2t) / dot(d1, d2t);\n    const t = dot(sub(o1, o2), d1t) / dot(d2, d1t);\n\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n        return [o1[0] + s * d1[0], o1[1] + s * d1[1]];\n    }\n}\n\nexport function sub ([ax, ay], [bx, by]) {\n    return ([ax - bx, ay - by]);\n}\n\nexport function dot ([ax, ay], [bx, by]) {\n    return (ax * bx + ay * by);\n}\n\nexport function perpendicular ([x, y]) {\n    return [-y, x];\n}\n\n/**\n * Compute the normal of a line AB.\n * By definition it is the unitary vector from B to A, rotated +90 degrees counter-clockwise\n */\nexport function getLineNormal (a, b) {\n    const u = normalize(a[0] - b[0], a[1] - b[1]);\n    return [-u[1], u[0]];\n}\n\n/**\n * Compute the normal of the join from the lines' normals.\n * By definition this is the sum of the unitary vectors `u` (from B to A) and `v` (from B to C)\n * multiplied by a factor of `1/sin(theta)` to reach the intersection of the wide lines.\n * Theta is the angle between the vectors `v` and `u`. But instead of computing the angle,\n * the `sin(theta)` (with sign) is obtained directly from the vectorial product of `v` and `u`\n */\nexport function getJoinNormal (prevNormal, nextNormal) {\n    const u = [prevNormal[1], -prevNormal[0]];\n    const v = [-nextNormal[1], nextNormal[0]];\n    const sin = v[0] * u[1] - v[1] * u[0];\n    const cos = v[0] * u[0] + v[1] * u[1];\n    const factor = Math.abs(sin);\n    const miterJoin = !(factor < 0.866 && cos > 0.5); // 60 deg\n    return {\n        turnLeft: sin > 0,\n        joinNormal: miterJoin && neg([\n            (u[0] + v[0]) / factor,\n            (u[1] + v[1]) / factor\n        ])\n    };\n}\n\n/**\n * Return the negative of the provided vector\n */\nexport function neg (v) {\n    return [-v[0], -v[1]];\n}\n\n/**\n * Return the vector scaled to length 1\n */\nfunction normalize (x, y) {\n    const s = Math.hypot(x, y);\n    return [x / s, y / s];\n}\n\n// Returns true if p is inside the triangle or on a triangle's edge, false otherwise\n// Parameters in {x: 0, y:0} form\nexport function pointInTriangle (p, v1, v2, v3) {\n    // https://stackoverflow.com/questions/2049582/how-to-determine-if-a-point-is-in-a-2d-triangle\n    // contains an explanation of both this algorithm and one based on barycentric coordinates,\n    // which could be faster, but, nevertheless, it is quite similar in terms of required arithmetic operations\n\n    if (equalPoints(v1, v2) || equalPoints(v2, v3) || equalPoints(v3, v1)) {\n        // Avoid zero area triangle\n        return false;\n    }\n\n    // A point is inside a triangle or in one of the triangles edges\n    // if the point is in the three half-plane defined by the 3 edges\n    const b1 = halfPlaneSign(p, v1, v2) < 0;\n    const b2 = halfPlaneSign(p, v2, v3) < 0;\n    const b3 = halfPlaneSign(p, v3, v1) < 0;\n\n    return (b1 === b2) && (b2 === b3);\n}\n\n// Tests if a point `p` is in the half plane defined by the line with points `a` and `b`\n// Returns a negative number if the result is INSIDE, returns 0 if the result is ON_LINE,\n// returns >0 if the point is OUTSIDE\n// Parameters in {x: 0, y:0} form\nexport function halfPlaneSign (p, a, b) {\n    // We use the cross product of `PB x AB` to get `sin(angle(PB, AB))`\n    // The result's sign is the half plane test result\n    return (p.x - b.x) * (a.y - b.y) - (a.x - b.x) * (p.y - b.y);\n}\n\nexport function equalPoints (a, b) {\n    return (a.x === b.x) && (a.y === b.y);\n}\n\nexport function pointInCircle (p, center, scale) {\n    const diff = {\n        x: p.x - center.x,\n        y: p.y - center.y\n    };\n    const lengthSquared = diff.x * diff.x + diff.y * diff.y;\n    return lengthSquared <= scale * scale;\n}\n\nexport function pointInRectangle (point, bbox) {\n    if (bbox === null) {\n        return false;\n    }\n    const p = {\n        x: point.x.toFixed(2),\n        y: point.y.toFixed(2)\n    };\n\n    return ((bbox.minx <= p.x) && (p.x <= bbox.maxx) && (bbox.miny <= p.y) && (p.y <= bbox.maxy));\n}\n\nexport function computeAABB (geometry, type) {\n    switch (type) {\n        case 'point':\n            return [];\n        case 'line':\n        case 'polygon':\n            const aabbList = [];\n\n            for (let i = 0; i < geometry.length; i++) {\n                const feature = geometry[i];\n\n                let aabb = {\n                    minx: Number.POSITIVE_INFINITY,\n                    miny: Number.POSITIVE_INFINITY,\n                    maxx: Number.NEGATIVE_INFINITY,\n                    maxy: Number.NEGATIVE_INFINITY\n                };\n\n                for (let j = 0; j < feature.length; j++) {\n                    aabb = _updateAABBForGeometry(feature[j], aabb, type);\n                }\n\n                if (aabb.minx === Number.POSITIVE_INFINITY) {\n                    aabb = null;\n                }\n\n                aabbList.push(aabb);\n            }\n\n            return aabbList;\n    }\n}\n\nfunction _updateAABBForGeometry (feature, aabb, geometryType) {\n    switch (geometryType) {\n        case 'line':\n            return _updateAABBLine(feature, aabb);\n        case 'polygon':\n            return _updateAABBPolygon(feature, aabb);\n    }\n}\n\nfunction _updateAABBLine (line, aabb) {\n    const vertices = line;\n    const numVertices = line.length;\n\n    for (let i = 0; i < numVertices; i += 2) {\n        aabb.minx = Math.min(aabb.minx, vertices[i + 0]);\n        aabb.miny = Math.min(aabb.miny, vertices[i + 1]);\n        aabb.maxx = Math.max(aabb.maxx, vertices[i + 0]);\n        aabb.maxy = Math.max(aabb.maxy, vertices[i + 1]);\n    }\n\n    return aabb;\n}\n\nfunction _updateAABBPolygon (polygon, aabb) {\n    const [vertices, numVertices] = [polygon.flat, polygon.holes[0] || polygon.flat.length / 2];\n\n    for (let i = 0; i < numVertices; i++) {\n        aabb.minx = Math.min(aabb.minx, vertices[2 * i + 0]);\n        aabb.miny = Math.min(aabb.miny, vertices[2 * i + 1]);\n        aabb.maxx = Math.max(aabb.maxx, vertices[2 * i + 0]);\n        aabb.maxy = Math.max(aabb.maxy, vertices[2 * i + 1]);\n    }\n\n    return aabb;\n}\n\nexport default {\n    intersect,\n    sub,\n    dot,\n    perpendicular,\n    getLineNormal,\n    getJoinNormal,\n    neg,\n    halfPlaneSign,\n    pointInTriangle,\n    equalPoints,\n    pointInCircle,\n    pointInRectangle\n};\n"],"sourceRoot":""}